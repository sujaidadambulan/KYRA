<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Set New Password</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    body {
      background-color: #f5f5f5;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .container {
      background-color: white;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 420px;
    }
    
    .header {
      text-align: center;
      margin-bottom: 1.5rem;
    }
    
    h1 {
      color: #333;
      font-size: 1.8rem;
      margin-bottom: 0.5rem;
    }
    
    p {
      color: #666;
      font-size: 0.95rem;
      line-height: 1.4;
    }
    
    form {
      display: flex;
      flex-direction: column;
    }
    
    label {
      color: #555;
      margin-bottom: 0.5rem;
      font-size: 0.9rem;
      font-weight: 500;
    }
    
    input {
      padding: 0.75rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 1rem;
      font-size: 1rem;
    }
    
    input:focus {
      outline: none;
      border-color: #4a90e2;
      box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2);
    }
    
    .password-requirements {
      background-color: #f9f9f9;
      padding: 0.75rem;
      border-radius: 4px;
      margin-bottom: 1.5rem;
    }
    
    .password-requirements h3 {
      font-size: 0.9rem;
      color: #555;
      margin-bottom: 0.5rem;
    }
    
    .password-requirements ul {
      list-style-type: none;
      font-size: 0.85rem;
      color: #777;
    }
    
    .password-requirements li {
      margin-bottom: 0.3rem;
      display: flex;
      align-items: center;
    }
    
    .password-requirements li::before {
      content: "•";
      color: #ccc;
      font-size: 1.2rem;
      margin-right: 0.5rem;
    }
    
    .password-requirements li.valid::before {
      content: "✓";
      color: #4caf50;
    }
    
    button {
      background-color: #4a90e2;
      color: white;
      border: none;
      padding: 0.75rem;
      border-radius: 4px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s;
      margin-top: 0.5rem;
    }
    
    button:hover {
      background-color: #3a7bca;
    }
    
    button:disabled {
      background-color: #ccc;
      cursor: not-allowed;
    }
    
    .alert {
      padding: 0.75rem;
      margin-bottom: 1.5rem;
      border-radius: 4px;
      background-color: #e9f5ff;
      color: #2c76c7;
      font-size: 0.9rem;
      display: none;
    }
    
    .alert.error {
      background-color: #ffebee;
      color: #c62828;
    }
    
    .alert.success {
      background-color: #e8f5e9;
      color: #2e7d32;
    }
    
    .password-toggle {
      position: relative;
    }
    
    .toggle-icon {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      color: #777;
      cursor: pointer;
      user-select: none;
      font-size: 0.9rem;
    }
  </style>
</head>
<body>
    <div class="container">
      <div class="header">
        <h1>Set New Password</h1>
        <p>Create a strong password to secure your account.</p>
      </div>
      
      <div class="alert" id="alert"></div>
      
      <form id="newPasswordForm">
        <label for="password">New Password</label>
        <div class="password-toggle">
          <input 
            type="password" 
            id="password" 
            name="password" 
            placeholder="Create new password" 
            required
          >
          <span class="toggle-icon" id="togglePassword">show</span>
        </div>
        
        <label for="confirmPassword">Confirm Password</label>
        <div class="password-toggle">
          <input 
            type="password" 
            id="confirmPassword" 
            name="confirmPassword" 
            placeholder="Confirm your password" 
            required
          >
          <span class="toggle-icon" id="toggleConfirmPassword">show</span>
        </div>
        
        <button type="submit" id="submitBtn" disabled>Set New Password</button>
      </form>
    </div>
    
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      const form = document.getElementById('newPasswordForm');
      const passwordInput = document.getElementById('password');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const alert = document.getElementById('alert');
      const submitBtn = document.getElementById('submitBtn');
      const togglePassword = document.getElementById('togglePassword');
      const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
      
      togglePassword.addEventListener('click', function() {
        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        passwordInput.setAttribute('type', type);
        this.textContent = type === 'password' ? 'show' : 'hide';
      });
      
      toggleConfirmPassword.addEventListener('click', function() {
        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
        confirmPasswordInput.setAttribute('type', type);
        this.textContent = type === 'password' ? 'show' : 'hide';
      });
      
      passwordInput.addEventListener('input', validatePassword);
      confirmPasswordInput.addEventListener('input', checkPasswordsMatch);
      
      function validatePassword() {
        const password = passwordInput.value;
        const allRequirementsMet = 
          password.length >= 8 && 
          /[A-Z]/.test(password) && 
          /[a-z]/.test(password) && 
          /[0-9]/.test(password);
        
        checkPasswordsMatch();
      }
      
      function checkPasswordsMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (password && confirmPassword) {
          if (password !== confirmPassword) {
            showAlert('Passwords do not match', 'error');
            submitBtn.disabled = true;
          } else {
            hideAlert();
            const allRequirementsMet = 
              password.length >= 8 && 
              /[A-Z]/.test(password) && 
              /[a-z]/.test(password) && 
              /[0-9]/.test(password);
            
            submitBtn.disabled = !allRequirementsMet;
          }
        }
      }
      
      function showAlert(message, type) {
        alert.textContent = message;
        alert.className = `alert ${type}`;
        alert.style.display = 'block';
      }
      
      function hideAlert() {
        alert.style.display = 'none';
      }
      
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const password = passwordInput.value;
        console.log('Submitting new password:', password); 

        $.ajax({
          type: 'POST',
          url: '/reset-password',
          data: { password: password },
          success: function(response) {
            console.log('Server response:', response); 
            if (response.success) {
              Swal.fire({
                icon: 'success',
                title: 'Password Reset Successfully',
                showConfirmButton: false,
                timer: 1500
              }).then((result) => {
                console.log('Swal completed, redirecting'); 
                window.location.href = '/login';
              }).catch((error) => {
                console.error('Swal error:', error); 
                window.location.href = '/login'; 
              });
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: response.message || 'Failed to reset password'
              });
            }
          },
          error: function(xhr, status, error) {
            console.error('AJAX error:', status, error); 
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Something went wrong'
            });
          }
        });
      });
    </script>
  </body>