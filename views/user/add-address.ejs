<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Address</title>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2e5e4e;
            --primary-color-dark: #245045;
            --background-color: #f1f3f5;
            --white: #ffffff;
            --text-color: #333;
            --input-border: #ddd;
            --input-focus: #4CAF50;
            --error-color: #ff0000; /* Red for validation errors */
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
            line-height: 1.6;
            background-color: var(--background-color);
            color: var(--text-color);
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .back-button {
            display: inline-flex;
            align-items: center;
            background-color: var(--primary-color);
            color: var(--white);
            text-decoration: none;
            padding: 10px 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            transition: background-color 0.3s ease;
            gap: 8px;
            font-weight: 500;
        }

        .back-button:hover {
            background-color: var(--primary-color-dark);
        }

        .back-button i {
            font-size: 1.2em;
        }

        .address-container {
            background-color: var(--white);
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        .address-header {
            margin-bottom: 30px;
            border-bottom: 2px solid var(--background-color);
            padding-bottom: 15px;
        }

        .address-header h2 {
            color: var(--primary-color);
            font-size: 24px;
            font-weight: 600;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            position: relative;
        }

        .form-group label {
            margin-bottom: 8px;
            color: var(--text-color);
            font-weight: 500;
        }

        .form-group input[type="text"],
        .form-group input[type="tel"] {
            padding: 12px;
            border: 1px solid var(--input-border);
            border-radius: 6px;
            transition: border-color 0.3s ease;
            font-size: 14px;
        }

        .form-group input[type="text"]:focus,
        .form-group input[type="tel"]:focus {
            outline: none;
            border-color: var(--input-focus);
            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
        }

        .form-group.error input {
            border-color: var(--error-color);
        }

        .error-message {
            color: var(--error-color);
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .form-group.error .error-message {
            display: block;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
        }

        .checkbox-group label {
            margin-bottom: 0;
            font-weight: 400;
        }

        .submit-btn {
            grid-column: span 2;
            background-color: var(--primary-color);
            color: var(--white);
            border: none;
            padding: 12px 20px;
            border-radius: 6px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-weight: 600;
            margin-top: 20px;
        }

        .submit-btn:hover {
            background-color: var(--primary-color-dark);
        }

        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .submit-btn {
                grid-column: span 1;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <a href="/address" class="back-button">
            <i class="ri-arrow-left-line"></i> Back to Addresses
        </a>

        <div class="address-container">
            <div class="address-header">
                <h2>Add New Address</h2>
            </div>

            <form action="/address/add" method="POST" onsubmit="return validateForm()">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="fullName">Full Name</label>
                        <input type="text" id="fullName" name="fullName">
                        <span class="error-message">Full name is required</span>
                    </div>

                    <div class="form-group">
                        <label for="street">Street Address</label>
                        <input type="text" id="street" name="street">
                        <span class="error-message">Street address is required</span>
                    </div>

                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" id="city" name="city">
                        <span class="error-message">City is required</span>
                    </div>

                    <div class="form-group">
                        <label for="state">State</label>
                        <input type="text" id="state" name="state">
                        <span class="error-message">State is required</span>
                    </div>

                    <div class="form-group">
                        <label for="postalCode">Postal Code</label>
                        <input type="text" id="postalCode" name="postalCode">
                        <span class="error-message">Postal code is required</span>
                    </div>

                    <div class="form-group">
                        <label for="country">Country</label>
                        <input type="text" id="country" name="country">
                        <span class="error-message">Country is required</span>
                    </div>

                    <div class="form-group">
                        <label for="primaryContact">Primary Contact</label>
                        <input type="tel" id="primaryContact" name="primaryContact">
                        <span class="error-message">Primary contact is required (10 digits)</span>
                    </div>

                    <div class="form-group">
                        <label for="alternativeContact">Alternative Contact</label>
                        <input type="tel" id="alternativeContact" name="alternativeContact">
                        <span class="error-message">Alternative contact must be 10 digits if provided</span>
                    </div>

                    <div class="checkbox-group">
                        <input type="checkbox" id="isDefault" name="isDefault">
                        <label for="isDefault">Set as Default Address</label>
                    </div>

                    <button type="submit" class="submit-btn">Save Address</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function validateForm() {
            let isValid = true;
            const phoneRegex = /^\d{10}$/;

            document.querySelectorAll('.form-group').forEach(group => {
                group.classList.remove('error');
            });

            const requiredFields = [
                { id: 'fullName', message: 'Full name is required' },
                { id: 'street', message: 'Street address is required' },
                { id: 'city', message: 'City is required' },
                { id: 'state', message: 'State is required' },
                { id: 'postalCode', message: 'Postal code is required' },
                { id: 'country', message: 'Country is required' },
                { id: 'primaryContact', message: 'Primary contact is required (10 digits)' }
            ];

            requiredFields.forEach(field => {
                const input = document.getElementById(field.id);
                const value = input.value.trim();
                const group = input.closest('.form-group');

                if (!value) {
                    group.classList.add('error');
                    isValid = false;
                } else if (field.id === 'primaryContact' && !phoneRegex.test(value)) {
                    group.classList.add('error');
                    isValid = false;
                }
            });

            const altContact = document.getElementById('alternativeContact');
            const altValue = altContact.value.trim();
            const altGroup = altContact.closest('.form-group');
            if (altValue && !phoneRegex.test(altValue)) {
                altGroup.classList.add('error');
                isValid = false;
            }

            return isValid;
        }
    </script>
</body>
</html>